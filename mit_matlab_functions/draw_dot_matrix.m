% Draws the matrix as a column/row sorted square dot-matrix pattern% INPUTs: adj - adjacency matrix representation of the graph% OUTPUTs: plot% Gergana Bounova, Last Updated: May 2, 2006function [] = draw_dot_matrix(adj)n = numnodes(adj);% degree centrality[deg,indeg,outdeg]=degrees(adj);[deg,Yd]=sort(deg);% node betweenness centrality[betw, Yb] = sort(node_betweenness_slow(adj));% OLD CODE ==============%e = eig(adj);%principal = find(abs(e)==max(abs(e)));%p=principal(1);%[V,D] = eig(adj);%Vp = V(:,p);%EC = n*Vp.^2;% =======================% eigen-centrality[EC,Yec]=sort(eigencentrality(adj));% WRITE the NEWMAN EIGENVECTOR MODULARITY IN MATLAB%[modules,Ym]=sort(m);set(gcf,'Color',[1 1 1])subplot(1,3,1)for i=1:n    for j=1:n        if adj(Yd(i),Yd(j))>0            % plot black rectangle            fill([i-1 i i i-1],[j-1 j-1 j j],'k')            hold off; hold on;        end    endendxlabel('ordered by degree','FontWeight','bold')axis([0 n 0 n]);axis squaresubplot(1,3,2)for i=1:n    for j=1:n        if adj(Yb(i),Yb(j))>0            % plot black rectangle            fill([i-1 i i i-1],[j-1 j-1 j j],'k')            hold off; hold on;        end    endendxlabel('ordered by betweenness','FontWeight','bold')axis([0 n 0 n]);axis squaresubplot(1,3,3)for i=1:n    for j=1:n        if adj(Yec(i),Yec(j))>0            % plot black rectangle            fill([i-1 i i i-1],[j-1 j-1 j j],'k')            hold off; hold on;        end    endendxlabel('ordered by eigen-centrality','FontWeight','bold')axis([0 n 0 n]);axis square% subplot(1,4,4)% for i=1:n%     for j=1:n%         if adj(Yec(i),Yec(j))>0%             % plot black rectangle%             fill([i-1 i i i-1],[j-1 j-1 j j],'k')%             hold off; hold on;%         end%     end% end% xlabel('ordered by eigenC','FontWeight','bold')% axis([0 n 0 n]);% axis square